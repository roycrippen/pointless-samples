# Sample Project Title

One Paragraph of project description goes here

## Getting Started

These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.

### Prerequisites

What things you need to install the software and how to install them


        "aaa" libload

        { [zipped-list last] ['j' 9] assert }
        "zipped-list" [ 'a' 'j' from-to-string 0 9 from-to-list zip ] define

        { [dt] 0.01 assert
          [springCoeff] 39.47 assert
          [func] 0.3947 assert
        }
        [ "dampCoeff"      [[8.88 12.0 11.11]]  
          "dt"             [0.01]               
          "gravity"        [-9.88]               
          "mass"           [1.00]               
          "springCoeff"    [39.47]                
          "func"           [springCoeff dt *]  
        ] defines 

        { [test-defs pop3 pop2] [8.88 12.0 11.11] assert }
        "test-defs" [ dampCoeff dt gravity mass springCoeff func ] define 

        { [maxValue minValue +] 0 assert }
        [ "maxValue"  100
          "minValue" -100
        ] dictionary

        10 "abc_" set-var tx

        $ "small" [dup size [2 <] exec] define

        $ "qsort" 
        $   [ [small] 
        $     [] 
        $     [uncons [>] split] 
        $     [swapd cons concat] 
        $     binrec
        $   ] define   $ slow 

        "scratch-pad" run-tests newstack
        
        [ [ 10 20 ] [ 30 40 ] 4 [ [ 50 60 ] ] ] flatten
        [ [1] 2 [[3 4] 5] [[[]]] [[[6]]] 7 8 [] ] flatten

        "Uncons" [ uncons first exec ] define 
        "Cons" [ [ ] cons cons ] define 
        "Rest" [ rest first exec ] define 
        "First" [ first ] define 
        "Second" [ Rest First ] define 
        "Drop" [ [ Rest ] times ] define 
        "N-th" [ pred Drop First ] define 
        "Null" [ null ] define 
        "Take" [ [ Null ] [ pop pop [ ] ] [ [ Uncons ] dip pred ] [ cons ] linrec ] define 
        "Size" [ 0 swap [ Null not ] [ [ succ ] dip Rest ] while pop ] define 
        "From" [ dup succ [ From ] cons Cons ] define
        "Filter"
          [
            [pop Null]
            [[]]		
            [ dup		
              [ [exec not] cons [first] swoncat
                [Rest]
                while
                Uncons 
              ]
              dip
              [Filter] cons cons	
              Cons 
            ]		
            ifte
          ] define 
